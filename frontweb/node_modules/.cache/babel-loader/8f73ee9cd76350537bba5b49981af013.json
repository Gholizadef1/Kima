{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateDirection = calculateDirection;\n\nfunction calculateDirection(trace, axis) {\n  var direction;\n  var negative = 'LEFT';\n  var positive = 'RIGHT';\n  var current = trace[trace.length - 1];\n  var previous = trace[trace.length - 2] || 0;\n\n  if (trace.every(function (i) {\n    return i === 0;\n  })) {\n    return 'NONE';\n  }\n\n  if (axis === 'y') {\n    negative = 'BOTTOM';\n    positive = 'TOP';\n  }\n\n  direction = current > previous ? positive : negative;\n\n  if (current === 0) {\n    direction = previous < 0 ? positive : negative;\n  }\n\n  return direction;\n}","map":{"version":3,"sources":["/home/gholizadef/my-app/node_modules/vanilla-swipe/lib/utils/calculateDirection.js"],"names":["Object","defineProperty","exports","value","calculateDirection","trace","axis","direction","negative","positive","current","length","previous","every","i"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;;AAEA,SAASA,kBAAT,CAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC;AACvC,MAAIC,SAAJ;AACA,MAAIC,QAAQ,GAAG,MAAf;AACA,MAAIC,QAAQ,GAAG,OAAf;AACA,MAAIC,OAAO,GAAGL,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAnB;AACA,MAAIC,QAAQ,GAAGP,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,IAA2B,CAA1C;;AAEA,MAAIN,KAAK,CAACQ,KAAN,CAAY,UAAUC,CAAV,EAAa;AAC3B,WAAOA,CAAC,KAAK,CAAb;AACD,GAFG,CAAJ,EAEI;AACF,WAAO,MAAP;AACD;;AAED,MAAIR,IAAI,KAAK,GAAb,EAAkB;AAChBE,IAAAA,QAAQ,GAAG,QAAX;AACAC,IAAAA,QAAQ,GAAG,KAAX;AACD;;AAEDF,EAAAA,SAAS,GAAGG,OAAO,GAAGE,QAAV,GAAqBH,QAArB,GAAgCD,QAA5C;;AAEA,MAAIE,OAAO,KAAK,CAAhB,EAAmB;AACjBH,IAAAA,SAAS,GAAGK,QAAQ,GAAG,CAAX,GAAeH,QAAf,GAA0BD,QAAtC;AACD;;AAED,SAAOD,SAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateDirection = calculateDirection;\n\nfunction calculateDirection(trace, axis) {\n  var direction;\n  var negative = 'LEFT';\n  var positive = 'RIGHT';\n  var current = trace[trace.length - 1];\n  var previous = trace[trace.length - 2] || 0;\n\n  if (trace.every(function (i) {\n    return i === 0;\n  })) {\n    return 'NONE';\n  }\n\n  if (axis === 'y') {\n    negative = 'BOTTOM';\n    positive = 'TOP';\n  }\n\n  direction = current > previous ? positive : negative;\n\n  if (current === 0) {\n    direction = previous < 0 ? positive : negative;\n  }\n\n  return direction;\n}"]},"metadata":{},"sourceType":"script"}